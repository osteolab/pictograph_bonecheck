run: |
  python - <<EOF
import os
import requests

def clean_up_github_images():
    repo_name = "osteolab/pictograph_bonecheck"
    headers = {"Authorization": f"Bearer {os.environ['GITHUB_TOKEN']}"}
    contents_url = f"https://api.github.com/repos/{repo_name}/contents/"

    try:
        # Fetch repository contents
        response = requests.get(contents_url, headers=headers)
        response.raise_for_status()
        files = response.json()

        # Filter for .png files
        images = [f for f in files if f["name"].endswith(".png")]

        # Sort images by name
        images = sorted(images, key=lambda x: x["name"], reverse=True)

        # Keep the last 10 images
        if len(images) > 10:
            for image in images[10:]:
                delete_url = f"https://api.github.com/repos/{repo_name}/contents/{image['path']}"
                sha = image['sha']
                delete_response = requests.delete(
                    delete_url,
                    headers=headers,
                    json={
                        "message": f"Delete old image {image['name']}",
                        "sha": sha
                    }
                )
                if not delete_response.ok:
                    raise Exception(f"Failed to delete {image['name']}: {delete_response.text}")
    except Exception as e:
        raise RuntimeError(f"Error occurred during cleanup: {e}")

clean_up_github_images()
EOF
